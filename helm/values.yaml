---
replicaCount: 1
image:
  repository: ghcr.io/naviteq/http-echo-server
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  create: false
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}
podSecurityContext: {}
  # fsGroup: 2000
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
service:
  type: ClusterIP
  port: 5000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

env:
  - name: DOWNWARD_PATH
    value: /etc/k8s
  - name: SERVER_PORT
    value: "5000"

volumes:
  - name: downward
    downwardAPI:
      items:
        - path: name
          fieldRef:
            fieldPath: metadata.name
        - path: namespace
          fieldRef:
            fieldPath: metadata.namespace
        - path: uid
          fieldRef:
            fieldPath: metadata.uid
        - path: annotations
          fieldRef:
            fieldPath: metadata.annotations
        - path: labels
          fieldRef:
            fieldPath: metadata.labels
        - path: "limits.cpu.m"
          resourceFieldRef:
            containerName: primary
            resource: limits.cpu
            divisor: 1m
        - path: "requests.cpu.m"
          resourceFieldRef:
            containerName: primary
            resource: requests.cpu
            divisor: 1m
        - path: "limits.memory.Mi"
          resourceFieldRef:
            containerName: primary
            resource: limits.memory
            divisor: 1Mi
        - path: "requests.memory.Mi"
          resourceFieldRef:
            containerName: primary
            resource: requests.memory
            divisor: 1Mi
        - path: "limits.hugepages-*.Gi"
          resourceFieldRef:
            containerName: primary
            resource: "limits.hugepages-*"
            divisor: 1Gi
        - path: "requests.hugepages-*.Gi"
          resourceFieldRef:
            containerName: primary
            resource: "requests.hugepages-*"
            divisor: 1Gi
        - path: "limits.ephemeral-storage.Gi"
          resourceFieldRef:
            containerName: primary
            resource: limits.ephemeral-storage
            divisor: 1Gi
        - path: "requests.ephemeral-storage.Gi"
          resourceFieldRef:
            containerName: primary
            resource: requests.ephemeral-storage
            divisor: 1Gi
volumeMounts:
  - name: downward
    mountPath: /etc/k8s
    readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
